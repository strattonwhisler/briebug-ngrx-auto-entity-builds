import { Injectable } from '@angular/core';
import { Actions, createEffect } from '@ngrx/effects';
import { ofEntityAction } from '../actions/action-operators';
import { EntityActionTypes } from '../actions/action-types';
import { EntityIfNecessaryOperators } from './if-necessary-operators';
import { EntityOperators } from './operators';
import * as i0 from "@angular/core";
import * as i1 from "@ngrx/effects";
import * as i2 from "./operators";
import * as i3 from "./if-necessary-operators";
/**
 * Fully-featured entity effects class that provides all standard
 * effect handling for all CURDL operations.
 */
export class EntityEffects {
    constructor(actions$, ops, ifnOps) {
        this.actions$ = actions$;
        this.ops = ops;
        this.ifnOps = ifnOps;
        this.load$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.Load), this.ops.load()));
        this.loadIfNecessary$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.LoadIfNecessary), this.ifnOps.loadIfNecessary()));
        this.loadAll$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.LoadAll), this.ops.loadAll()));
        this.loadAllIfNecessary$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.LoadAllIfNecessary), this.ifnOps.loadAllIfNecessary()));
        this.loadMany$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.LoadMany), this.ops.loadMany()));
        this.loadManyIfNecessary$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.LoadManyIfNecessary), this.ifnOps.loadManyIfNecessary()));
        this.loadPage$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.LoadPage), this.ops.loadPage()));
        this.loadPageIfNecessary$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.LoadPageIfNecessary), this.ifnOps.loadPageIfNecessary()));
        this.loadRange$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.LoadRange), this.ops.loadRange()));
        this.loadRangeIfNecessary$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.LoadRangeIfNecessary), this.ifnOps.loadRangeIfNecessary()));
        this.create$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.Create), this.ops.create()));
        this.createMany$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.CreateMany), this.ops.createMany()));
        this.update$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.Update), this.ops.update()));
        this.updateMany$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.UpdateMany), this.ops.updateMany()));
        this.upsert$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.Upsert), this.ops.upsert()));
        this.upsertMany$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.UpsertMany), this.ops.upsertMany()));
        this.replace$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.Replace), this.ops.replace()));
        this.replaceMany$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.ReplaceMany), this.ops.replaceMany()));
        this.delete$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.Delete), this.ops.delete()));
        this.deleteMany$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.DeleteMany), this.ops.deleteMany()));
        this.deleteByKey$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.DeleteByKey), this.ops.deleteByKey()));
        this.deleteManyByKeys$ = createEffect(() => this.actions$.pipe(ofEntityAction(EntityActionTypes.DeleteManyByKeys), this.ops.deleteManyByKey()));
    }
    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.2", ngImport: i0, type: EntityEffects, deps: [{ token: i1.Actions }, { token: i2.EntityOperators }, { token: i3.EntityIfNecessaryOperators }], target: i0.ɵɵFactoryTarget.Injectable }); }
    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "17.3.2", ngImport: i0, type: EntityEffects }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.2", ngImport: i0, type: EntityEffects, decorators: [{
            type: Injectable
        }], ctorParameters: () => [{ type: i1.Actions }, { type: i2.EntityOperators }, { type: i3.EntityIfNecessaryOperators }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWZmZWN0cy1hbGwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3J4LWF1dG8tZW50aXR5L3NyYy9saWIvZWZmZWN0cy9lZmZlY3RzLWFsbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBSXRELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sYUFBYSxDQUFDOzs7OztBQUU5Qzs7O0dBR0c7QUFFSCxNQUFNLE9BQU8sYUFBYTtJQTJEeEIsWUFBb0IsUUFBaUIsRUFBVSxHQUFvQixFQUFVLE1BQWtDO1FBQTNGLGFBQVEsR0FBUixRQUFRLENBQVM7UUFBVSxRQUFHLEdBQUgsR0FBRyxDQUFpQjtRQUFVLFdBQU0sR0FBTixNQUFNLENBQTRCO1FBMUQvRyxVQUFLLEdBQUcsWUFBWSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztRQUV4RyxxQkFBZ0IsR0FBRyxZQUFZLENBQUMsR0FBRyxFQUFFLENBQ25DLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxpQkFBaUIsQ0FBQyxlQUFlLENBQUMsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLGVBQWUsRUFBRSxDQUFDLENBQ3JHLENBQUM7UUFFRixh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LGNBQWMsQ0FBQyxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUUxSCxpQkFBWSxHQUFHLFlBQVksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsaUJBQWlCLENBQUMsV0FBVyxDQUFDLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFN0gsc0JBQWlCLEdBQUcsWUFBWSxDQUFDLEdBQUcsRUFBRSxDQUNwQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsaUJBQWlCLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBRSxDQUFDLENBQ25HLENBQUM7SUFFZ0gsQ0FBQztpSUEzRHhHLGFBQWE7cUlBQWIsYUFBYTs7MkZBQWIsYUFBYTtrQkFEekIsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGlvbnMsIGNyZWF0ZUVmZmVjdCB9IGZyb20gJ0BuZ3J4L2VmZmVjdHMnO1xuaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBvZkVudGl0eUFjdGlvbiB9IGZyb20gJy4uL2FjdGlvbnMvYWN0aW9uLW9wZXJhdG9ycyc7XG5pbXBvcnQgeyBFbnRpdHlBY3Rpb25UeXBlcyB9IGZyb20gJy4uL2FjdGlvbnMvYWN0aW9uLXR5cGVzJztcbmltcG9ydCB7IEVudGl0eUlmTmVjZXNzYXJ5T3BlcmF0b3JzIH0gZnJvbSAnLi9pZi1uZWNlc3Nhcnktb3BlcmF0b3JzJztcbmltcG9ydCB7IEVudGl0eU9wZXJhdG9ycyB9IGZyb20gJy4vb3BlcmF0b3JzJztcblxuLyoqXG4gKiBGdWxseS1mZWF0dXJlZCBlbnRpdHkgZWZmZWN0cyBjbGFzcyB0aGF0IHByb3ZpZGVzIGFsbCBzdGFuZGFyZFxuICogZWZmZWN0IGhhbmRsaW5nIGZvciBhbGwgQ1VSREwgb3BlcmF0aW9ucy5cbiAqL1xuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEVudGl0eUVmZmVjdHMge1xuICBsb2FkJCA9IGNyZWF0ZUVmZmVjdCgoKSA9PiB0aGlzLmFjdGlvbnMkLnBpcGUob2ZFbnRpdHlBY3Rpb24oRW50aXR5QWN0aW9uVHlwZXMuTG9hZCksIHRoaXMub3BzLmxvYWQoKSkpO1xuXG4gIGxvYWRJZk5lY2Vzc2FyeSQgPSBjcmVhdGVFZmZlY3QoKCkgPT5cbiAgICB0aGlzLmFjdGlvbnMkLnBpcGUob2ZFbnRpdHlBY3Rpb24oRW50aXR5QWN0aW9uVHlwZXMuTG9hZElmTmVjZXNzYXJ5KSwgdGhpcy5pZm5PcHMubG9hZElmTmVjZXNzYXJ5KCkpXG4gICk7XG5cbiAgbG9hZEFsbCQgPSBjcmVhdGVFZmZlY3QoKCkgPT4gdGhpcy5hY3Rpb25zJC5waXBlKG9mRW50aXR5QWN0aW9uKEVudGl0eUFjdGlvblR5cGVzLkxvYWRBbGwpLCB0aGlzLm9wcy5sb2FkQWxsKCkpKTtcblxuICBsb2FkQWxsSWZOZWNlc3NhcnkkID0gY3JlYXRlRWZmZWN0KCgpID0+XG4gICAgdGhpcy5hY3Rpb25zJC5waXBlKG9mRW50aXR5QWN0aW9uKEVudGl0eUFjdGlvblR5cGVzLkxvYWRBbGxJZk5lY2Vzc2FyeSksIHRoaXMuaWZuT3BzLmxvYWRBbGxJZk5lY2Vzc2FyeSgpKVxuICApO1xuXG4gIGxvYWRNYW55JCA9IGNyZWF0ZUVmZmVjdCgoKSA9PiB0aGlzLmFjdGlvbnMkLnBpcGUob2ZFbnRpdHlBY3Rpb24oRW50aXR5QWN0aW9uVHlwZXMuTG9hZE1hbnkpLCB0aGlzLm9wcy5sb2FkTWFueSgpKSk7XG5cbiAgbG9hZE1hbnlJZk5lY2Vzc2FyeSQgPSBjcmVhdGVFZmZlY3QoKCkgPT5cbiAgICB0aGlzLmFjdGlvbnMkLnBpcGUob2ZFbnRpdHlBY3Rpb24oRW50aXR5QWN0aW9uVHlwZXMuTG9hZE1hbnlJZk5lY2Vzc2FyeSksIHRoaXMuaWZuT3BzLmxvYWRNYW55SWZOZWNlc3NhcnkoKSlcbiAgKTtcblxuICBsb2FkUGFnZSQgPSBjcmVhdGVFZmZlY3QoKCkgPT4gdGhpcy5hY3Rpb25zJC5waXBlKG9mRW50aXR5QWN0aW9uKEVudGl0eUFjdGlvblR5cGVzLkxvYWRQYWdlKSwgdGhpcy5vcHMubG9hZFBhZ2UoKSkpO1xuXG4gIGxvYWRQYWdlSWZOZWNlc3NhcnkkID0gY3JlYXRlRWZmZWN0KCgpID0+XG4gICAgdGhpcy5hY3Rpb25zJC5waXBlKG9mRW50aXR5QWN0aW9uKEVudGl0eUFjdGlvblR5cGVzLkxvYWRQYWdlSWZOZWNlc3NhcnkpLCB0aGlzLmlmbk9wcy5sb2FkUGFnZUlmTmVjZXNzYXJ5KCkpXG4gICk7XG5cbiAgbG9hZFJhbmdlJCA9IGNyZWF0ZUVmZmVjdCgoKSA9PiB0aGlzLmFjdGlvbnMkLnBpcGUob2ZFbnRpdHlBY3Rpb24oRW50aXR5QWN0aW9uVHlwZXMuTG9hZFJhbmdlKSwgdGhpcy5vcHMubG9hZFJhbmdlKCkpKTtcblxuICBsb2FkUmFuZ2VJZk5lY2Vzc2FyeSQgPSBjcmVhdGVFZmZlY3QoKCkgPT5cbiAgICB0aGlzLmFjdGlvbnMkLnBpcGUob2ZFbnRpdHlBY3Rpb24oRW50aXR5QWN0aW9uVHlwZXMuTG9hZFJhbmdlSWZOZWNlc3NhcnkpLCB0aGlzLmlmbk9wcy5sb2FkUmFuZ2VJZk5lY2Vzc2FyeSgpKVxuICApO1xuXG4gIGNyZWF0ZSQ6IE9ic2VydmFibGU8QWN0aW9uPiA9IGNyZWF0ZUVmZmVjdCgoKSA9PiB0aGlzLmFjdGlvbnMkLnBpcGUob2ZFbnRpdHlBY3Rpb24oRW50aXR5QWN0aW9uVHlwZXMuQ3JlYXRlKSwgdGhpcy5vcHMuY3JlYXRlKCkpKTtcblxuICBjcmVhdGVNYW55JDogT2JzZXJ2YWJsZTxBY3Rpb24+ID0gY3JlYXRlRWZmZWN0KCgpID0+XG4gICAgdGhpcy5hY3Rpb25zJC5waXBlKG9mRW50aXR5QWN0aW9uKEVudGl0eUFjdGlvblR5cGVzLkNyZWF0ZU1hbnkpLCB0aGlzLm9wcy5jcmVhdGVNYW55KCkpXG4gICk7XG5cbiAgdXBkYXRlJCA9IGNyZWF0ZUVmZmVjdCgoKSA9PiB0aGlzLmFjdGlvbnMkLnBpcGUob2ZFbnRpdHlBY3Rpb24oRW50aXR5QWN0aW9uVHlwZXMuVXBkYXRlKSwgdGhpcy5vcHMudXBkYXRlKCkpKTtcblxuICB1cGRhdGVNYW55JCA9IGNyZWF0ZUVmZmVjdCgoKSA9PiB0aGlzLmFjdGlvbnMkLnBpcGUob2ZFbnRpdHlBY3Rpb24oRW50aXR5QWN0aW9uVHlwZXMuVXBkYXRlTWFueSksIHRoaXMub3BzLnVwZGF0ZU1hbnkoKSkpO1xuXG4gIHVwc2VydCQgPSBjcmVhdGVFZmZlY3QoKCkgPT4gdGhpcy5hY3Rpb25zJC5waXBlKG9mRW50aXR5QWN0aW9uKEVudGl0eUFjdGlvblR5cGVzLlVwc2VydCksIHRoaXMub3BzLnVwc2VydCgpKSk7XG5cbiAgdXBzZXJ0TWFueSQgPSBjcmVhdGVFZmZlY3QoKCkgPT4gdGhpcy5hY3Rpb25zJC5waXBlKG9mRW50aXR5QWN0aW9uKEVudGl0eUFjdGlvblR5cGVzLlVwc2VydE1hbnkpLCB0aGlzLm9wcy51cHNlcnRNYW55KCkpKTtcblxuICByZXBsYWNlJCA9IGNyZWF0ZUVmZmVjdCgoKSA9PiB0aGlzLmFjdGlvbnMkLnBpcGUob2ZFbnRpdHlBY3Rpb24oRW50aXR5QWN0aW9uVHlwZXMuUmVwbGFjZSksIHRoaXMub3BzLnJlcGxhY2UoKSkpO1xuXG4gIHJlcGxhY2VNYW55JCA9IGNyZWF0ZUVmZmVjdCgoKSA9PiB0aGlzLmFjdGlvbnMkLnBpcGUob2ZFbnRpdHlBY3Rpb24oRW50aXR5QWN0aW9uVHlwZXMuUmVwbGFjZU1hbnkpLCB0aGlzLm9wcy5yZXBsYWNlTWFueSgpKSk7XG5cbiAgZGVsZXRlJCA9IGNyZWF0ZUVmZmVjdCgoKSA9PiB0aGlzLmFjdGlvbnMkLnBpcGUob2ZFbnRpdHlBY3Rpb24oRW50aXR5QWN0aW9uVHlwZXMuRGVsZXRlKSwgdGhpcy5vcHMuZGVsZXRlKCkpKTtcblxuICBkZWxldGVNYW55JCA9IGNyZWF0ZUVmZmVjdCgoKSA9PiB0aGlzLmFjdGlvbnMkLnBpcGUob2ZFbnRpdHlBY3Rpb24oRW50aXR5QWN0aW9uVHlwZXMuRGVsZXRlTWFueSksIHRoaXMub3BzLmRlbGV0ZU1hbnkoKSkpO1xuXG4gIGRlbGV0ZUJ5S2V5JCA9IGNyZWF0ZUVmZmVjdCgoKSA9PiB0aGlzLmFjdGlvbnMkLnBpcGUob2ZFbnRpdHlBY3Rpb24oRW50aXR5QWN0aW9uVHlwZXMuRGVsZXRlQnlLZXkpLCB0aGlzLm9wcy5kZWxldGVCeUtleSgpKSk7XG5cbiAgZGVsZXRlTWFueUJ5S2V5cyQgPSBjcmVhdGVFZmZlY3QoKCkgPT5cbiAgICB0aGlzLmFjdGlvbnMkLnBpcGUob2ZFbnRpdHlBY3Rpb24oRW50aXR5QWN0aW9uVHlwZXMuRGVsZXRlTWFueUJ5S2V5cyksIHRoaXMub3BzLmRlbGV0ZU1hbnlCeUtleSgpKVxuICApO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgYWN0aW9ucyQ6IEFjdGlvbnMsIHByaXZhdGUgb3BzOiBFbnRpdHlPcGVyYXRvcnMsIHByaXZhdGUgaWZuT3BzOiBFbnRpdHlJZk5lY2Vzc2FyeU9wZXJhdG9ycykge31cbn1cbiJdfQ==