import { EntityActionTypes } from './action-types';
import { EntityAction } from './entity-action';
/**
 * Updates or inserts a single entity, corresponding to HTTP PUT or POST operation.
 *
 */
export class Upsert extends EntityAction {
    constructor(type, entity, criteria, correlationId) {
        super(type, EntityActionTypes.Upsert, correlationId);
        this.entity = entity;
        this.criteria = criteria;
    }
}
export class UpsertSuccess extends EntityAction {
    constructor(type, entity, criteria, correlationId) {
        super(type, EntityActionTypes.UpsertSuccess, correlationId);
        this.entity = entity;
        this.criteria = criteria;
    }
}
export class UpsertFailure extends EntityAction {
    constructor(type, error, entity, criteria, correlationId) {
        super(type, EntityActionTypes.UpsertFailure, correlationId);
        this.error = error;
        this.entity = entity;
        this.criteria = criteria;
    }
}
/**
 * Updates or inserts many entities, corresponding to HTTP PUT or POST operation.
 *
 */
export class UpsertMany extends EntityAction {
    constructor(type, entities, criteria, correlationId) {
        super(type, EntityActionTypes.UpsertMany, correlationId);
        this.entities = entities;
        this.criteria = criteria;
    }
}
export class UpsertManySuccess extends EntityAction {
    constructor(type, entities, criteria, correlationId) {
        super(type, EntityActionTypes.UpsertManySuccess, correlationId);
        this.entities = entities;
        this.criteria = criteria;
    }
}
export class UpsertManyFailure extends EntityAction {
    constructor(type, error, entities, criteria, correlationId) {
        super(type, EntityActionTypes.UpsertManyFailure, correlationId);
        this.error = error;
        this.entities = entities;
        this.criteria = criteria;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBzZXJ0LWFjdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3J4LWF1dG8tZW50aXR5L3NyYy9saWIvYWN0aW9ucy91cHNlcnQtYWN0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0M7OztHQUdHO0FBQ0gsTUFBTSxPQUFPLE1BQWUsU0FBUSxZQUFvQjtJQUN0RCxZQUFZLElBQXNCLEVBQVMsTUFBYyxFQUFTLFFBQWMsRUFBRSxhQUFzQjtRQUN0RyxLQUFLLENBQUMsSUFBSSxFQUFFLGlCQUFpQixDQUFDLE1BQU0sRUFBRSxhQUFhLENBQUMsQ0FBQztRQURaLFdBQU0sR0FBTixNQUFNLENBQVE7UUFBUyxhQUFRLEdBQVIsUUFBUSxDQUFNO0lBRWhGLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxhQUFzQixTQUFRLFlBQW9CO0lBQzdELFlBQVksSUFBc0IsRUFBUyxNQUFjLEVBQVMsUUFBYyxFQUFFLGFBQXNCO1FBQ3RHLEtBQUssQ0FBQyxJQUFJLEVBQUUsaUJBQWlCLENBQUMsYUFBYSxFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBRG5CLFdBQU0sR0FBTixNQUFNLENBQVE7UUFBUyxhQUFRLEdBQVIsUUFBUSxDQUFNO0lBRWhGLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxhQUFzQixTQUFRLFlBQW9CO0lBQzdELFlBQVksSUFBc0IsRUFBUyxLQUFVLEVBQVMsTUFBYyxFQUFTLFFBQWMsRUFBRSxhQUFzQjtRQUN6SCxLQUFLLENBQUMsSUFBSSxFQUFFLGlCQUFpQixDQUFDLGFBQWEsRUFBRSxhQUFhLENBQUMsQ0FBQztRQURuQixVQUFLLEdBQUwsS0FBSyxDQUFLO1FBQVMsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUFTLGFBQVEsR0FBUixRQUFRLENBQU07SUFFbkcsQ0FBQztDQUNGO0FBRUQ7OztHQUdHO0FBQ0gsTUFBTSxPQUFPLFVBQW1CLFNBQVEsWUFBb0I7SUFDMUQsWUFBWSxJQUFzQixFQUFTLFFBQWtCLEVBQVMsUUFBYyxFQUFFLGFBQXNCO1FBQzFHLEtBQUssQ0FBQyxJQUFJLEVBQUUsaUJBQWlCLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBRGhCLGFBQVEsR0FBUixRQUFRLENBQVU7UUFBUyxhQUFRLEdBQVIsUUFBUSxDQUFNO0lBRXBGLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxpQkFBMEIsU0FBUSxZQUFvQjtJQUNqRSxZQUFZLElBQXNCLEVBQVMsUUFBa0IsRUFBUyxRQUFjLEVBQUUsYUFBc0I7UUFDMUcsS0FBSyxDQUFDLElBQUksRUFBRSxpQkFBaUIsQ0FBQyxpQkFBaUIsRUFBRSxhQUFhLENBQUMsQ0FBQztRQUR2QixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQVMsYUFBUSxHQUFSLFFBQVEsQ0FBTTtJQUVwRixDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8saUJBQTBCLFNBQVEsWUFBb0I7SUFDakUsWUFBWSxJQUFzQixFQUFTLEtBQVUsRUFBUyxRQUFrQixFQUFTLFFBQWMsRUFBRSxhQUFzQjtRQUM3SCxLQUFLLENBQUMsSUFBSSxFQUFFLGlCQUFpQixDQUFDLGlCQUFpQixFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBRHZCLFVBQUssR0FBTCxLQUFLLENBQUs7UUFBUyxhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQVMsYUFBUSxHQUFSLFFBQVEsQ0FBTTtJQUV2RyxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbnRpdHlBY3Rpb25UeXBlcyB9IGZyb20gJy4vYWN0aW9uLXR5cGVzJztcbmltcG9ydCB7IEVudGl0eUFjdGlvbiB9IGZyb20gJy4vZW50aXR5LWFjdGlvbic7XG5cbi8qKlxuICogVXBkYXRlcyBvciBpbnNlcnRzIGEgc2luZ2xlIGVudGl0eSwgY29ycmVzcG9uZGluZyB0byBIVFRQIFBVVCBvciBQT1NUIG9wZXJhdGlvbi5cbiAqXG4gKi9cbmV4cG9ydCBjbGFzcyBVcHNlcnQ8VE1vZGVsPiBleHRlbmRzIEVudGl0eUFjdGlvbjxUTW9kZWw+IHtcbiAgY29uc3RydWN0b3IodHlwZTogbmV3ICgpID0+IFRNb2RlbCwgcHVibGljIGVudGl0eTogVE1vZGVsLCBwdWJsaWMgY3JpdGVyaWE/OiBhbnksIGNvcnJlbGF0aW9uSWQ/OiBzdHJpbmcpIHtcbiAgICBzdXBlcih0eXBlLCBFbnRpdHlBY3Rpb25UeXBlcy5VcHNlcnQsIGNvcnJlbGF0aW9uSWQpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBVcHNlcnRTdWNjZXNzPFRNb2RlbD4gZXh0ZW5kcyBFbnRpdHlBY3Rpb248VE1vZGVsPiB7XG4gIGNvbnN0cnVjdG9yKHR5cGU6IG5ldyAoKSA9PiBUTW9kZWwsIHB1YmxpYyBlbnRpdHk6IFRNb2RlbCwgcHVibGljIGNyaXRlcmlhPzogYW55LCBjb3JyZWxhdGlvbklkPzogc3RyaW5nKSB7XG4gICAgc3VwZXIodHlwZSwgRW50aXR5QWN0aW9uVHlwZXMuVXBzZXJ0U3VjY2VzcywgY29ycmVsYXRpb25JZCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFVwc2VydEZhaWx1cmU8VE1vZGVsPiBleHRlbmRzIEVudGl0eUFjdGlvbjxUTW9kZWw+IHtcbiAgY29uc3RydWN0b3IodHlwZTogbmV3ICgpID0+IFRNb2RlbCwgcHVibGljIGVycm9yOiBhbnksIHB1YmxpYyBlbnRpdHk6IFRNb2RlbCwgcHVibGljIGNyaXRlcmlhPzogYW55LCBjb3JyZWxhdGlvbklkPzogc3RyaW5nKSB7XG4gICAgc3VwZXIodHlwZSwgRW50aXR5QWN0aW9uVHlwZXMuVXBzZXJ0RmFpbHVyZSwgY29ycmVsYXRpb25JZCk7XG4gIH1cbn1cblxuLyoqXG4gKiBVcGRhdGVzIG9yIGluc2VydHMgbWFueSBlbnRpdGllcywgY29ycmVzcG9uZGluZyB0byBIVFRQIFBVVCBvciBQT1NUIG9wZXJhdGlvbi5cbiAqXG4gKi9cbmV4cG9ydCBjbGFzcyBVcHNlcnRNYW55PFRNb2RlbD4gZXh0ZW5kcyBFbnRpdHlBY3Rpb248VE1vZGVsPiB7XG4gIGNvbnN0cnVjdG9yKHR5cGU6IG5ldyAoKSA9PiBUTW9kZWwsIHB1YmxpYyBlbnRpdGllczogVE1vZGVsW10sIHB1YmxpYyBjcml0ZXJpYT86IGFueSwgY29ycmVsYXRpb25JZD86IHN0cmluZykge1xuICAgIHN1cGVyKHR5cGUsIEVudGl0eUFjdGlvblR5cGVzLlVwc2VydE1hbnksIGNvcnJlbGF0aW9uSWQpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBVcHNlcnRNYW55U3VjY2VzczxUTW9kZWw+IGV4dGVuZHMgRW50aXR5QWN0aW9uPFRNb2RlbD4ge1xuICBjb25zdHJ1Y3Rvcih0eXBlOiBuZXcgKCkgPT4gVE1vZGVsLCBwdWJsaWMgZW50aXRpZXM6IFRNb2RlbFtdLCBwdWJsaWMgY3JpdGVyaWE/OiBhbnksIGNvcnJlbGF0aW9uSWQ/OiBzdHJpbmcpIHtcbiAgICBzdXBlcih0eXBlLCBFbnRpdHlBY3Rpb25UeXBlcy5VcHNlcnRNYW55U3VjY2VzcywgY29ycmVsYXRpb25JZCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFVwc2VydE1hbnlGYWlsdXJlPFRNb2RlbD4gZXh0ZW5kcyBFbnRpdHlBY3Rpb248VE1vZGVsPiB7XG4gIGNvbnN0cnVjdG9yKHR5cGU6IG5ldyAoKSA9PiBUTW9kZWwsIHB1YmxpYyBlcnJvcjogYW55LCBwdWJsaWMgZW50aXRpZXM6IFRNb2RlbFtdLCBwdWJsaWMgY3JpdGVyaWE/OiBhbnksIGNvcnJlbGF0aW9uSWQ/OiBzdHJpbmcpIHtcbiAgICBzdXBlcih0eXBlLCBFbnRpdHlBY3Rpb25UeXBlcy5VcHNlcnRNYW55RmFpbHVyZSwgY29ycmVsYXRpb25JZCk7XG4gIH1cbn1cbiJdfQ==