import { EntityActionTypes } from '../actions/action-types';
import { IEffectExclusions } from './effect-exclusions';
export declare const except: (effects?: any) => (...actions: EntityActionTypes[]) => IEffectExclusions;
export declare const matching: (...actions: EntityActionTypes[]) => IEffectExclusions;
export declare const all: Readonly<{
    except: (...actions: EntityActionTypes[]) => IEffectExclusions;
    "[Entity] (Generic) Select": true;
    "[Entity] (Generic) Select Many": true;
    "[Entity] (Generic) Select by Key": true;
    "[Entity] (Generic) Select Many by Keys": true;
    "[Entity] (Generic) Deselect": true;
    "[Entity] (Generic) Deselect of Many": true;
    "[Entity] (Generic) Deselect of Many by Keys": true;
    "[Entity] (Generic) Deselect of All": true;
    "[Entity] (Generic) Clear": true;
    "[Entity] (Generic) Create": true;
    "[Entity] (Generic) Create Many": true;
    "[Entity] (Generic) Update": true;
    "[Entity] (Generic) Update Many": true;
    "[Entity] (Generic) Upsert": true;
    "[Entity] (Generic) Upsert Many": true;
    "[Entity] (Generic) Replace": true;
    "[Entity] (Generic) Replace Many": true;
    "[Entity] (Generic) Delete": true;
    "[Entity] (Generic) Delete Many": true;
    "[Entity] (Generic) Delete by key": true;
    "[Entity] (Generic) Delete many by keys": true;
    "[Entity] (Generic) Load": true;
    "[Entity] (Generic) Load All": true;
    "[Entity] (Generic) Load Many": true;
    "[Entity] (Generic) Load Page": true;
    "[Entity] (Generic) Load Range": true;
}>;
export declare const extra: Readonly<{
    except: (...actions: EntityActionTypes[]) => IEffectExclusions;
    "[Entity] (Generic) Select": true;
    "[Entity] (Generic) Select Many": true;
    "[Entity] (Generic) Select by Key": true;
    "[Entity] (Generic) Select Many by Keys": true;
    "[Entity] (Generic) Deselect": true;
    "[Entity] (Generic) Deselect of Many": true;
    "[Entity] (Generic) Deselect of Many by Keys": true;
    "[Entity] (Generic) Deselect of All": true;
    "[Entity] (Generic) Clear": true;
}>;
export declare const loads: Readonly<{
    except: (...actions: EntityActionTypes[]) => IEffectExclusions;
    "[Entity] (Generic) Load": true;
    "[Entity] (Generic) Load All": true;
    "[Entity] (Generic) Load Many": true;
    "[Entity] (Generic) Load Page": true;
    "[Entity] (Generic) Load Range": true;
}>;
export declare const curd: Readonly<{
    except: (...actions: EntityActionTypes[]) => IEffectExclusions;
    "[Entity] (Generic) Create": true;
    "[Entity] (Generic) Create Many": true;
    "[Entity] (Generic) Update": true;
    "[Entity] (Generic) Update Many": true;
    "[Entity] (Generic) Upsert": true;
    "[Entity] (Generic) Upsert Many": true;
    "[Entity] (Generic) Replace": true;
    "[Entity] (Generic) Replace Many": true;
    "[Entity] (Generic) Delete": true;
    "[Entity] (Generic) Delete Many": true;
    "[Entity] (Generic) Delete by key": true;
    "[Entity] (Generic) Delete many by keys": true;
}>;
